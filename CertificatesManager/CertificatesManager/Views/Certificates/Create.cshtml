@model CertificatesManager.Models.CertificateViewModel

@{
    ViewBag.Title = "Create";
}
<div id="authorData" data-authorname="@ViewBag.Author" data-authoreosaccount="@ViewBag.EosAuthor"></div>

<h2>Create</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createCertificateForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Certificate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfIssue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlaceOfIssue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlaceOfIssue, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EOSOwnerAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EOSOwnerAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EOSOwnerAccount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", id = "contentBox", Value = " " } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <p>(This will be finally managed by Scatter)</p>
            @Html.LabelFor(model => model.AuthorEOSPrivateKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.AuthorEOSPrivateKey, new { htmlAttributes = new { @class = "form-control", value = " " } })
                @Html.ValidationMessageFor(model => model.AuthorEOSPrivateKey, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/eos.js"></script>
    <script src="~/Scripts/eosjs-ecc.js"></script>
    <script src="~/Scripts/app/certificate_management.js"></script>
}
